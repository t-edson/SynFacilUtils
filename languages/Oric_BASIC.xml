<?xml version="1.0"?>
<Language name="Oric BASIC" ext="bas" FirstGen="true" CaseSensitive="true">
  <Completion CaseSensitive="false" SelectOnEnter="true">
	<OpenOn AfterPattern="Symbol">
       "ABS|ABS(\_)"
        AND
        "ASC|ASC(\_)"
        "ATN|ATN(\_)"
        AUTO
        CALL
        "CHR$|CHR$(\_)"
        CIRCLE
        CLEAR
        CLOAD
        CLS
        "COS|COS(\_)"
        CSAVE
        CURMOV
        CURSET
        DATA
        "DEEK|DEEK(\_)"
        DEF
		"DEF FN ... =|DEF FN \_ ="
		"DEF USR=|DEF USR="
        DIM
        DOKE
        DRAW
        EDIT
        ELSE
        END
        "EXP|EXP(\_)"
        EXPLODE
        FALSE
        FILL
        FN
        FOR
        "FOR ... TO|FOR \_=  TO "
        "FOR ... TO ... STEP|FOR \_ =  TO  STEP "
        FRE(0)|FRE(0)
        "FRE&quot;&quot;|FRE&quot;&quot;"
        GET
        GOSUB
        GOTO
        GRAB|
        HEX$|HEX$(\_)
        HIMEM
        HIRES
        IF
        INK
        INPUT|
        "INT|INT(\_)"
        KEY$
        LEFT$|LEFT$(\_,)
        LEN|LEN(\_)
        LET
        "LET ... =|LET \_="
        LIST
        LLIST
        "LN|LN(\_)"
        "LOG|LOG(\_)"
        LORES
        LPRINT|
        "MID$|MID$(\_,,)"
        MUSIC|
        NEW
        NEXT
        NOT
        ON
        "ON ... GOTO|ON \_ GOTO"
        "ON ... GOSUB|ON \_ GOSUB"
        OR
        PAPER
        PATTERN
        "PEEK|PEEK(\_)"
        PI
        PING
        PLAY 
        PLOT 
        "POINT|POINT(\_,)"
        POKE
        POP
        "POS|POS(\_)"
        PRINT
        PULL
        READ
        RECALL
        RELEASE
        REM
        REPEAT
        RESTORE
        RETURN
        "RIGHT$|RIGHT$(\_,)"
        "RND|RND(\_)"
        RUN
        "SCRN|SCRN(\_,)"
        "SGN|SGN(\_)"
        SHOOT
        SIN|SIN(\_)"
        SOUND
        "SPC|SPC(\_)"
        "SQR|SQR(\_)"
        STEP
        STOP
        STORE
        "STR$|STR$(\_)"
        "TAB|TAB(\_)"
        "TAN|TAN(\_)"
        TEXT
        THEN
        TO
        TROFF
        TRON
        TRUE
        UNTIL
        USR
        "USR()|USR(\_)"
        "VAL|VAL(\_)"
        WAIT
        ZAP
	</OpenOn>
	<OpenOn AfterPattern='"DEF",space' FilterBy="None" Action="Insert">
        "FN ... =|FN \_ ="
        "USR=|USR="
    </OpenOn>
  </Completion>
  <Attribute Name="Keyword1"   ForeCol="#00A4F2" Bold="false"  Italic="False" Underline="False"/>
  <Attribute Name="Keyword2"   ForeCol="Purple" Bold="false"  Italic="False" Underline="False"/>
  <Attribute Name="Comment"   ForeCol="#8D8D8D" Bold="False" Italic="False" Underline="False"/>
  <Attribute Name="Number"    ForeCol="#FF00FF" Bold="False" Italic="False" Underline="False"/>
  <Attribute Name="Delimiter"    ForeCol="#000000" Bold="false" Italic="False" Underline="False"/>
  <Attribute Name="Operator"    ForeCol="Blue" Bold="False" Italic="False" Underline="False"/>
  <Attribute Name="Variable"    ForeCol="Teal" Bold="false" Italic="False" Underline="False"/>
  <Identifiers CharsStart= "£" Content = "a..z">
  </Identifiers>
  
  <Token CharsStart="#" Content = '0..9ABCDEF' Attribute='Number'/>
  <Token regex = '[0-9]+[\.]?[0-9]*[E][+-]?[0-9]+' Attribute='Number'/>
  <Token regex='[A-Z][A-Z0-9]*[$%]?' Attribute='Variable'/>
  <String Start="&quot;" End="&quot;"> </String>
  <Comment Start="REM"></Comment>
  <Comment Start="&apos;" ></Comment>
  <Symbols>
    
    <Operator>
      + - * / ^ AND OR &gt; = &lt; ( )
    </Operator>
	<keyword>
	  ! &amp; :
	</keyword>
	<Keyword1>EDIT STORE RECALL TRON TROFF PLOT LORES DOKE
	LLIST LPRINT DATA
	INPUT DIM CLS READ LET RUN RESTORE
	REM HIMEM GRAB RELEASE TEXT HIRES SHOOT EXPLODE ZAP PING
	SOUND MUSIC PLAY CURSET CURMOV DRAW CIRCLE PATTERN FILL
	CHAR PAPER INK WAIT CLOAD CSAVE DEF POKE PRINT
	LIST CLEAR GET CALL NEW TAB FN SPC @ AUTO NOT
	SGN INT ABS USR FRE POS HEX$ SQR RND LN EXP COS
	SIN TAN ATN PEEK DEEK LOG LEN STR$ VAL ASC CHR$ PI
	TRUE FALSE KEY$ SCRN POINT LEFT$ RIGHT$ MID$</Keyword1>
	<Keyword2> END POP PULL
	REPEAT UNTIL FOR NEXT GOTO GOSUB RETURN
	ON TO IF ELSE THEN STEP STOP
	</Keyword2>
	
  </Symbols>
  
</Language>